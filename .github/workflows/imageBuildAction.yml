name: Integration Actions to Build Custom Image

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main

jobs:
  action_on_pull_request_merge:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      PORT: ${{ secrets.ENV_PORT }}
      DB_NAME: ${{ secrets.POSTGRES_DB }}
      DB_USER: ${{ secrets.POSTGRES_USER }}
      DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      HOST: ${{ vars.HOST}}
      DIALECT: ${{vars.DIALECT}}
      LINK_EXPIRATION_TIME: ${{vars.LINK_EXPIRATION_TIME}}
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      REGION: ${{vars.REGION}}
      ZONE: ${{vars.ZONE}}
      SOURCE_IMAGE_FAMILY: ${{ vars.SOURCE_IMAGE_FAMILY }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      DISK_SIZE: ${{ vars.DISK_SIZE}}
      DISK_TYPE: ${{ vars.DISK_TYPE }}8
      TEMPLATE_NAME: ${{vars.INSTANCE_TEMPLATE_NAME}}
      NETWORK_INTERFACE_TIER: ${{vars.NETWORK_INTERFACE_TIER}}
      SUBNET: ${{vars.SUBNET}}
      KEYRING_NAME: ${{vars.KEYRING_NAME}}
      MIG: ${{vars.MIG}}
      MIG_INSTANCE_TEMPLATE_PATH: ${{vars.MIG_INSTANCE_TEMPLATE_PATH}}
      MAX_INSTANCE_UNAVAILABLE: ${{vars.MAX_INSTANCE_UNAVAILABLE}}
      MACHINE_TYPE: ${{vars.MACHINE_TYPE}}
      INSTANCE_DB_HOST: ${{ vars.INSTANCE_DB_HOST}}
      INSTANCE_DB_PASSWORD: ${{vars.INSTANCE_DB_PASSWORD}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: GCP Authentication
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.IAM_SERVICE_ACCOUNT }}"

      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Use gcloud CLI
        run: "gcloud info"

      - name: Setup Packer
        uses: hashicorp/setup-packer@main

      - name: Create Zip File of Webapp Repo
        run: zip -r webapp.zip .

      - name: Move Zip to Workflows Directory
        run: mv webapp.zip vm-image/

      - name: Init and Build Custom Image
        run: |
          cd vm-image/
          packer init gcpBuild.pkr.hcl

      - name: Create new Instance Template version
        run: |
          gcloud compute instance-templates create testingtemplateten \
          --project=csye6225-a03 \
          --description="This template is used to create web instances depending on the load" \
          --machine-type=e2-standard-2 \
          --network-interface=network-tier=STANDARD,subnet=webapp \
          --instance-template-region=us-east4 \
          --region=us-east4 \
          --maintenance-policy=MIGRATE \
          --provisioning-model=STANDARD \
          --service-account=service-account-webapp@csye6225-a03.iam.gserviceaccount.com \
          --scopes=https://www.googleapis.com/auth/pubsub,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write \
          --tags=web-instance \
          --create-disk=auto-delete=yes,boot=yes,device-name=persistent-disk-0,image=csye6225-1712532924,kms-key=projects/csye6225-a03/locations/us-east4/keyRings/regional_keyring/cryptoKeys/vm_instance_key,mode=rw,size=100,type=pd-standard \
          --no-shielded-secure-boot \
          --shielded-vtpm \
          --shielded-integrity-monitoring \
          --reservation-affinity=any \
          --metadata=startup-script="#/bin/bash
            cd /home/Cloud/webapp/ ||exit
            sudo tee -a .env <<EOF >/dev/null
            PORT=3001
            DB_NAME=webapp
            DB_USER=webapp
            DB_PASSWORD=UAsaVuoaMkuzB02R
            HOST=10.199.202.2
            DIALECT=postgres
            NODE_ENV=PROD
            LINK_EXPIRATION_TIME=120
            EOF
            sudo chown csye6225:csye6225 .env
            " \
          --instance-template-region=us-east4

      - name: Configure Managed Instance Group to Use the New Template
        run: gcloud compute instance-groups managed set-instance-template $MIG --template=$MIG_INSTANCE_TEMPLATE_PATH/testingtemplateten --region=$REGION

      - name: Recreate Instances in Managed Instance Group
        run: gcloud compute instance-groups managed rolling-action replace $MIG --region=$REGION --replacement-method=recreate --max-surge=0

      - name: Wait for Instance Group Refresh
        run: gcloud compute instance-groups managed wait-until --version-target-reached $MIG --region=$REGION
